---
import Base from "../../layouts/Base.astro";
import Card from "../../components/Card.astro";

import { allMaison, filterByPrix, getOffre } from "../../js/backend.mjs";
const offress = await allMaison();

let message = '';
let offres = [];
if (Astro.request.method === "POST") {
    const data = await Astro.request.formData();
    const minPrix = parseInt(data.get("minPrix"));
    const maxPrix = parseInt(data.get("maxPrix"));

    if (minPrix > 0 && maxPrix > 0 && maxPrix > minPrix) {
        offres = await filterByPrix(minPrix, maxPrix);
		if(offres.length === 0) {
			message = `Pas d'offres entre ${minPrix}€ et ${maxPrix}€`;
		} else {
        	message = `Liste des offres entre ${minPrix}€ et ${maxPrix}€`
		}
    } else {
        message = "Veuillez entrer des valeurs valides pour le prix.";
        offres = await getOffre();
    }
} else {
    offres = await getOffre();
}
---

<Base titre="Offres">
	<h1 class="text-4xl font-bold mb-10">Offres</h1>

	<form class="text-black *:rounded-lg *:px-3" action="/offres" method="POST">
		<input type="number" name="minPrix" placeholder="Prix minimum" />
		<input type="number" name="maxPrix" placeholder="Prix maximum" />
		<input class="cursor-pointer hover:text-white transition ease-out" type="submit" value="Filtrer par prix" />
	</form>
	<p>{message}</p>
	<a href="/offres/add">Ajouter</a>

	<div x-data="{showFavoris: false, grid: true}" class="space-y-5">
		<button @click="showFavoris = !showFavoris" class="bg-red-400 px-5 py-2 rounded-2xl font-bold">
			<span x-show="!showFavoris">Afficher les favoris</span>
			<span x-show="showFavoris">Afficher tout</span>
		</button>
		<button @click="grid = !grid" class="bg-red-400 px-5 py-2 rounded-2xl font-bold">
			<span x-show="!grid">Grille</span>
			<span x-show="grid">Liste</span>
		</button>
		<a href={`/offres/surface/${40}`} class="bg-red-400 px-5 py-2 rounded-2xl font-bold">Sup a 40m<sup>2</sup></a>

		<div x-show="!showFavoris" x-transition :class="grid ? 'grid grid-cols-2 lg:grid-cols-3 gap-7' : 'flex flex-col shrink gap-7 w-1/2 lg:w-1/3'">
			{
				offress.map((offre) => (
					<Card {...offre}/>
				))
			}
		</div>
		<div x-show="showFavoris" x-transition :class="grid ? 'grid grid-cols-2 lg:grid-cols-3 gap-7' : 'flex flex-col shrink gap-7 w-1/2 lg:w-1/3'">
			{
				offress.map((offre) => (
					offre.favori && <Card {...offre}/>
				))
			}
		</div>
	</div>
</Base>